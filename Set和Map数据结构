******数据结构Set它类似于数组，但是成员的值都是唯一的，没有重复的值。*****
栗子：
var s=new Set();
[2,3,5,4,5,2,2].map(x=>s.add(x))
for(i of s){
	console.log(i);// 2 3 4 5
}

****set数据结构有以下属性和方法：
>>size：返回成员总数。
>>add(value)：添加某个值。
>>delete(value)：删除某个值。
>>has(value)：返回一个布尔值，表示该值是否为set的成员。
>>clear()：清除所有成员。
栗子：
s.add("1").add("2").add("2"); 
// 注意“2”被加入了两次，但是只会添加一个2，不会重复
s.size // 2
******************************************************************************************************************************************
*****数据结构Map它类似于对象，就是一个键值对的集合，但是“键”的范围不限于字符串，甚至对象也可以当作键。******

****Map数据结构有以下属性和方法。

>>size：返回成员总数。
>>set(key, value)：设置一个键值对。
>>get(key)：读取一个键。
>>has(key)：返回一个布尔值，表示某个键是否在Map数据结构中。
>>delete(key)：删除某个键。
>>clear()：清除所有成员。
栗子：
var m = new Map(); 
m.set("edition", 6)        // 键是字符串
m.set(262, "standard")     // 键是数值
m.set(undefined, "nah")    // 键是undefined

var hello = function() {console.log("hello");}
m.set(hello, "Hello ES6!") // 键是函数

m.has("edition")     // true
m.has("years")       // false
m.has(262)           // true
m.has(undefined)     // true
m.has(hello)         // true

m.delete(undefined)
m.has(undefined)       // false

m.get(hello)  // Hello ES6!
m.get("edition")  // 6
